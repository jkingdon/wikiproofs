{{interfaces
| imports = [[Interface:Complex number axioms]]
| exports = [[Interface:Tarski's geometry axioms]]
}}

[[Interface:Tarski's geometry axioms|Tarki's geometry axioms]] provide a set of axioms for Euclidian geometry which are based only on the concepts of congruence and betweenness: they make no reference to numbers. Here we show how to derive those axioms from real numbers.

We import [[Interface:Classical propositional calculus]], [[Interface:First-order logic with quantifiability]],  [[Interface:Set theory]], and [[Interface:Complex number axioms]].

<jh>
import (CLASSICAL Interface:Classical_propositional_calculus () ())
import (QUANTIFY_OVER_SETS Interface:First-order_logic_with_quantifiability (CLASSICAL) set.)
import (SETS Interface:Set_theory (CLASSICAL QUANTIFY_OVER_SETS) ())
import (COMPLEX Interface:Complex_numbers (CLASSICAL QUANTIFY_OVER_SETS SETS) ())
</jh>

We also import an interface, [[Interface:Restricting all quantifiers]], which provides the mapping between quantifiers which range over sets and quantifiers which range over points. The reason for this to be a separate interface rather than just a set of definitions and theorems in this file is that when it comes time to export to [[Interface:Tarski's geometry axioms]], we'll need an interface to pass as a parameter.
<jh>
import (QUANTIFY_OVER_POINTS Interface:Restricting_all_quantifiers (CLASSICAL QUANTIFY_OVER_SETS SETS COMPLEX) ())
</jh>

The way that [[Interface:Restricting all quantifiers]] works, we don't have separate kinds for geometry versus sets; we merely change the way the quantifiers work.
<jh>
kindbind (object point)
</jh>

Now we define some variables and provide a few trivial definitions.

<jh>
var (variable x)
var (object s A B C D)
var (formula φ)

def ((subst s x φ) (set.subst s x φ))
</jh>

We define congruence using the usual definitions for Cartesian two-dimensional space.<ref>Tarski and Givant, page 201</ref> The definition is interesting if <code>A</code> is an ordered pair <code>〈1st A, 2nd A〉</code>, where <code>1st A</code> and <code>2nd A</code> are real numbers, and likewise for <code>B</code>, <code>C</code>, and <code>D</code>.
<jh>
#def ((≡ A B C D) (
#  ((((1st A) − (1st B)) · ((1st A) − (1st B))) +
#    (((2nd A) − (2nd B)) · ((2nd A) − (2nd B)))) =
#  ((((1st C) − (1st D)) · ((1st C) − (1st D))) +
#    (((2nd C) − (2nd D)) · ((2nd C) − (2nd D))))
#))
</jh>

Now we export to [[Interface:Tarski's geometry axioms]]. (Or, rather, we will when we are ready).
<jh>
#export (TARSKI Interface:Tarski's_geometry_axioms (CLASSICAL QUANTIFY_OVER_POINTS) ())
</jh>

== Footnotes ==
<references/>

== References ==
* Tarski, Alfred; Givant, Steven (1999), "[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.27.9012 Tarski's system of geometry]", The Bulletin of Symbolic Logic 5 (2): 175–214, [[doi:10.2307/421089]], MR1791303, ISSN 1079-8986

[[Category:Euclidean geometries (general) and generalizations]]
[[Category:Foundations of classical theories (including reverse mathematics)]]