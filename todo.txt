Items which may be doable without a network connection:

* arithmetic
  - a ≤ a (leid in peano_thms)

* convenience theorems of propositional logic
  - any more in Basic Arithmetic?
* look at whether Raph's proof of ceqsex simplifies our development
  (I think it might enable omitting a bunch of strange little
  theorems).
  - the proof does need Quantifiability but nothing else we don't have.
  - ceqsex is ImplicitThereExists.
    - ImplicitSubstitutionThereExists
      - ImplicitSubstitutionForAll
        - ax9oc (see also equs4c)
          - ax6o (see also NegationNotFree, ax9o)
        - a5i

  * ax9o is only used by equs4.

* naming convention for implication builders
  a. addImplicationAntecedent (from addCommonAntecedent)
     ImplicationConsequentAddition (from CommonConsequentAddition)
     ImplicationConsequentBuilder (from ImplicationBuilderRR)
     ImplicationConsequentBuilderInConsequent
     buildImplicationAntecedent
     buildImplication
     buildImplicationConsequentInConsequent (from buildCommonConsequentInConsequent)
* General set theory
  - ordered pair
  - definitions and consequences: union?,
    intersection, difference (e.g. eldifi and similar), subset
  - do both directions of A = B ↔ { A } = { B } hold? (think so)
  - indexed union or intersection? (if needed for functions)
  - binary relations. Notation (relates s R t) ?
  - prove Peano axioms from them
    - suc11
  - finite induction (e.g. peano5 in set.mm)
  - functions and relations (e.g. cxp and following in set.mm)
    - cross products, e.g. cxp, df-xp, elxp, opelxp1, opelxp
      xpss regarding existence of cross products (note dependence on
      ax-pow, which is more explicit in xpsspw).
    - note dmex depends on ax-pow and ax-un, but doesn't need replacement.
  - recursion theorem (see downloaded wikipedia page, Joedit)
    = frfnom and friends in set.mm
      - e.g. http://us.metamath.org/mpeuni/df-rdg.html

To do with network:

nomenclature: combining vs combination from User:Kingdon

Don't export TheoremNotFree

We refer to this process as gathering (that is, gathering the quantifiers together at the start of the formula) or scattering (the opposite).

