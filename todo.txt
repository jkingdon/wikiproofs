Items which may be doable without a network connection:

* prove sb8 (see User:Kingdon for notes)
* sb8e, once sb8/sbn done
* definitions versus dummies (LessThan), once sb8e done

* more intuitionistic logic
  - rest of DeMorgan
  - NegationBuilder follows easily from TranspositionIntroduction
  - biconditional (should mostly be copy-paste from Principia, I think)
* convenience theorems of propositional logic
  - buildDisjunctionLL in First-order logic
  - any more in Basic Arithmetic?
* look at whether Raph's proof of ceqsex simplifies our development
  (I think it might enable omitting a bunch of strange little
  theorems).
* naming convention for implication builders
  a. addImplicationAntecedent (from addCommonAntecedent)
     ImplicationConsequentAddition (from CommonConsequentAddition)
     ImplicationConsequentBuilder (from ImplicationBuilderRR)
     ImplicationConsequentBuilderInConsequent
     buildImplicationAntecedent
     buildImplication
     buildImplicationConsequentInConsequent (from buildCommonConsequentInConsequent)

To do with network:

* Download some metamath proofs? (if so, which ones?)
* See what the intuitionistic export blows up on currently

Maybe todo (without network):

Proof of sbf; seems like we are ready for this one.
Step	Hyp	Ref 	Expression
1	 	sb1 1239	. . . 4 ⊢ ([y / x]φ → ∃x(x = y ⋀ φ))
2	 	sbf.1	. . . . 5 ⊢ (φ → ∀xφ)
3	2	19.41 1157	. . . 4 ⊢ (∃x(x = y ⋀ φ) ↔ (∃x x = y ⋀ φ))
4	1, 3	sylib 204	. . 3 ⊢ ([y / x]φ → (∃x x = y ⋀ φ))
5	4	pm3.27d 333	. 2 ⊢ ([y / x]φ → φ)
6	 	stdpc4 1248	. . 3 ⊢ (∀xφ → [y / x]φ)
7	2, 6	syl 11	. 2 ⊢ (φ → [y / x]φ)
8	5, 7	impbii 163	1 ⊢ ([y / x]φ ↔ φ)


