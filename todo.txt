Items which may be doable without a network connection:

* need these for ordered pairs
  - prcom, prid1 (used in proof of preq1 or preq2)
  - preq1, preq2 (builders for unordered pair)
  - opeq12 (builder for ordered pair)
* set theory theorems we may need/want but not yet
  - prid2

* convenience theorems of propositional logic
  - any more in Basic Arithmetic?
* look at whether Raph's proof of ceqsex simplifies our development
  (I think it might enable omitting a bunch of strange little
  theorems).
* naming convention for implication builders
  a. addImplicationAntecedent (from addCommonAntecedent)
     ImplicationConsequentAddition (from CommonConsequentAddition)
     ImplicationConsequentBuilder (from ImplicationBuilderRR)
     ImplicationConsequentBuilderInConsequent
     buildImplicationAntecedent
     buildImplication
     buildImplicationConsequentInConsequent (from buildCommonConsequentInConsequent)
* rewrite opening paragraph of substVariable section
* General set theory
  - ordered pair
  - definitions and consequences: opth from set.mm, union?,
    intersection, difference (e.g. eldifi and similar), subset
  - ordered pair ("cons"?)
  - cite metamath?
    = elsn provides "definition" of singleton
      x = s <-> x element-of { s }
      also s = t <-> s element-of { t }   (elsncg, basically)
  - indexed union or intersection? (if needed for functions)
  - binary relations. Notation (relates s R t) ?
  - prove Peano axioms from them
  - finite induction (e.g. peano5 in set.mm)
  - functions and relations (e.g. cxp and following in set.mm)
  - recursion theorem (see downloaded wikipedia page, Joedit)
    = frfnom and friends in set.mm
      - e.g. http://us.metamath.org/mpeuni/df-rdg.html

To do with network:

* export intuitionistic logic from principia just like law of the excluded middle

