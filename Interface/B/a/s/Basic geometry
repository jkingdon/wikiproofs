{{modules
| parameters = [[Interface:Classical propositional calculus|Classical propositional calculus]], [[Interface:First-order logic with quantifiability|first-order logic]]
| importedby = None yet.
| exportedby = [[Basic geometry]]
}}

Here we state a variety of basic geometrical theorems involving collinearity, midpoints, perpendiculars, and the like.

We build on [[Interface:Classical propositional calculus|propositional logic]] and [[Interface:First-order logic with quantifiability|first-order logic]] (including equality):

<jh>
param (CLASSICAL Interface:Classical_propositional_calculus () ())
param (FIRSTORDER Interface:First-order_logic_with_quantifiability (CLASSICAL) ())
</jh>

The kind <code>object</code>, defined in first-order logic, represents a point. We do not directly have a concept of lines, angles, or circles (nor can these be defined in the obvious way as sets of points, as this is a first-order theory).
<jh>
kindbind (object point)
var (point x y z w u v A B C D Q)
var (point x′ y′ z′ u′)

var (variable a b c)
</jh>

== Congruence of line segments ==
We introduce congruence of line segments; <code>(x y ≡ w z)</code> means that the line segment <code>x y</code> is the same length as the line segment <code>w z</code>. This property is also known as equidistance.
<jh>
term (formula (≡ point point point point))
</jh>

There are a variety of ways of expressing the idea that congruence is not affected by the order in which we list the line segment's endpoints.
<jh>
stmt (CongruenceLeftCommutativity () () ((x y ≡ z w) ↔ (y x ≡ z w)))
stmt (CongruenceRightCommutativity () () ((x y ≡ z w) ↔ (x y ≡ w z)))
stmt (CongruenceCommutativity () () ((x y ≡ z w) ↔ (y x ≡ w z)))
</jh>

The congruence relation has the attributes of an equivalence relation between line segments.
<jh>
stmt (CongruenceReflexivity () () (x y ≡ x y))
stmt (CongruenceSymmetry () () ((x y ≡ z w) ↔ (z w ≡ x y)))
stmt (CongruenceTransitivity () () (((x y ≡ z w) ∧ (z w ≡ u v)) → (x y ≡ u v)))
</jh>

A segment which has zero length starts and ends at the same point (although saying "zero length" is a bit of a shortcut, as our theory is not based on real numbers or any other numbers).
<jh>
stmt (CongruenceIdentity () () ((x y ≡ z z) → (x = y)))
stmt (CongruenceIdentityLeft () () ((x x ≡ y z) → (y = z)))
stmt (CongruenceTrivialIdentity () () (y y ≡ x x))
stmt (CongruenceIdentityFromEquality () () ((x = y) → ((x y ≡ z w) → (z = w))))
</jh>

== Betweenness ==
The other fundamental formula is betweenness; <code>(between x y z)</code> signifies "y is between x and z".

<jh>
term (formula (between point point point))
</jh>

There are no points between a point and itself.
<jh>
stmt (IndivisibilityBidirectional () () ((between x y x) ↔ (x = y)))
</jh>

A point is between itself and any second point.
<jh>
stmt (BetweenABB () () (between A B B))
stmt (BetweenAAB () () (between A A B))
</jh>

In addition, this situation (a point is between itself and another) is the only way that betweenness can hold both as-is and with the first two points exchanged.
<jh>
stmt (BetweennessEquality () () (((between A B C) ∧ (between B A C)) → (A = B)))
</jh>

The two endpoints of a betweenness relation are interchangeable.
<jh>
stmt (BetweennessSymmetry () () ((between A B C) ↔ (between C B A)))
</jh>

=== Transitivity ===
In this section we present six similar theorems which involve four points on a line. Given two betweenness relationships, we conclude a third. Three of the six are just versions of the other three which are flipped left-to-right.
<jh>
stmt (BetweennessInnerTransitivity () ()
  (((between A B D) ∧ (between B C D)) → (between A B C)))
stmt (BetweennessInnerTransitivityFlipped () ()
  (((between A B C) ∧ (between A C D)) → (between B C D)))

stmt (BetweennessOuterTransitivity () ()
  ((((between A B C) ∧ (between B C D)) ∧ (B ≠ C)) → (between A B D)))
stmt (BetweennessOuterTransitivityFlipped () ()
  ((((between A B C) ∧ (between B C D)) ∧ (B ≠ C)) → (between A C D)))

stmt (BetweennessMiddleTransitivity () ()
  (((between A B D) ∧ (between B C D)) → (between A C D)))
stmt (BetweennessMiddleTransitivityFlipped () ()
  (((between A B C) ∧ (between A C D)) → (between A B D)))
</jh>

== Segment construction ==
A line segment can be extended beyond one of its endpoints by a specified distance (where by "distance" we mean a second line segment, which the constructed segment is to be congruent to). The segment extended this way is unique.
<jh>
stmt (SegmentConstruction () () (∃ a ((between w x (value a)) ∧ (x (value a) ≡ y z))))
stmt (SegmentConstructionUniqueness () () ((((((Q ≠ A) ∧ (between Q A x)) ∧ (A x ≡ B C)) ∧ (between Q A y)) ∧ (A y ≡ B C)) → (x = y)))
</jh>

== Existence of distinct points ==
Here we can construct a point distinct from a given point, or a point distinct from a given point extended along a given line segment.
<jh>
stmt (PointConstructionDifferent () () (∃ c ((between A B (value c)) ∧ (B ≠ (value c)))))
stmt (AnotherPoint () () (∃ b (A ≠ (value b))))
</jh>

== Five segment ==
<gallery>
File:Five segment.svg|Outer five segment
File:Inner five segment.svg|Inner five segment
</gallery>
The five segment theorems are variations of the familiar congruences for triangles (although without any explicit reference to angles).
<jh>
stmt (OuterFiveSegment () ()
  ((((((((x ≠ y) ∧ (between x y z)) ∧ (between x′ y′ z′))
     ∧ (x y ≡ x′ y′)) ∧ (y z ≡ y′ z′)) ∧ (x u ≡ x′ u′)) ∧ (y u ≡ y′ u′))
   → (z u ≡ z′ u′))
)
stmt (InnerFiveSegment () ()
  (((((((between x y z) ∧ (between x′ y′ z′))
    ∧ (x z ≡ x′ z′)) ∧ (y z ≡ y′ z′)) ∧ (x u ≡ x′ u′)) ∧ (z u ≡ z′ u′))
  → (y u ≡ y′ u′)))
</jh>

== Builders ==
Being able to substitute equals for equals needs to be stated for every operator.
<jh>
var (point x0 x1 x2 x3 y0 y1 y2 y3)
stmt (CongruenceBuilder () () (
  ((((x0 = y0) ∧ (x1 = y1)) ∧ (x2 = y2)) ∧ (x3 = y3))
  → ((x0 x1 ≡ x2 x3) ↔ (y0 y1 ≡ y2 y3))
))
stmt (BetweenBuilder () () (
  (((x0 = y0) ∧ (x1 = y1)) ∧ (x2 = y2))
  → ((between x0 x1 x2) ↔ (between y0 y1 y2))
))
</jh>

{{DEFAULTSORT:{{PAGENAME}}}}
[[Category:Euclidean geometries (general) and generalizations]]
[[Category:Foundations of classical theories (including reverse mathematics)]]