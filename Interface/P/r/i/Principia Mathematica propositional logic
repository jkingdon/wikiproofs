{{header
 | title    = Principia Mathematica
 | subtitle = Propositional Logic
 | left     = 
 | right    = 
 | shortcut = 
 | notes    = This interface defines the "primitive ideas" (axioms) making up the propositional logic part of the [[w:Principia Mathematica|Principia Mathematica]]<ref>{{sc|A. Whitehead, B. Russell}}, Principia Mathematica, ''Cambridge University Press'', 1910.</ref>.
}}
{{modules
| parameters = ''none''
| importedby = [[Principia Mathematica propositional logic]]
| exportedby = 
[[Nicod's reduction of Principia Mathematica]]<br />
[[Standard axioms imply Principia Mathematica axioms]]
}}


== Well-formed formulas ==

We first introduce the kind of [[w:well-formed formula|well-formed formula]]s, abbreviated as "wff". This kind subsumes the Principia Mathematica concepts of elementary and non-elementary propositions and, due to the recursive nature of JHilbert, propositional functions as well. We also introduce three variables, <math>p,q,r</math>, as placeholders for wffs.
<jh>
kind (wff)
var (wff p q r)
</jh>

== Logical connectives ==

Of the standard five [[w:logical connective|logical connective]]s of classical propositional logic, Principia requires only [[w:disjunction|disjunction]] (<math>\vee</math>-symbol) and [[w:implication|implication]] (<math>\rightarrow</math>-symbol) for its axioms. However, disjunction and [[w:negation|negation]] (<math>\neg</math>-symbol) are actually used as primitive logical connective. Implication is defined from them:
<jh>
term (wff (¬ wff)) # Negation
term (wff (∨ wff wff)) # Disjunction
def ((→ p q) ((¬ p) ∨ q)) # Implication, *1.01
</jh>
Though not strictly needed for the axioms, Principia also defines [[w:logical conjunction|conjunction]] (<math>\wedge</math>-symbol) and the [[w:biconditional|biconditional]] (<math>\leftrightarrow</math>-symbol):
<jh>
def ((∧ p q) (¬ ((¬ p) ∨ (¬ q)))) # Conjunction, *3.01
def ((↔ p q) ((p → q) ∧ (q → p))) # Biconditional, *4.01
</jh>
Note that Principia actually uses different symbols for negation, implication, conjunction and the biconditional. However, the present symbols reflect current usage.

== The axioms ==

We are now in the position to state the six axioms for propositional logic of Principia (five, if you don't count the rule of detachment). The sole rule of detachment in Principia works like this:
:''If one may assert <math>p</math>, and also that <math>p</math> implies <math>q</math> (i.e., <math>p\rightarrow q</math>), then one may infer <math>q</math>.''
This rule has become known as [[w:modus ponens|modus ponens]]. Since the corresponding JHilbert statement requires hypotheses, we fomulate it in imperative form:
<jh>
stmt (applyModusPonens () (p (p → q)) q) # *1.1
</jh>

The next axiom, called ''Taut'' for [[w:tautology (logic)|tautology]], asserts the [[w:idempotency|idempotency]] of disjunction in one direction:
<jh>
stmt (Taut () () ((p ∨ p) → p)) # *1.2
</jh>

The ''Add'' axiom, for addition, asserts that a disjunction may be added to a wff.
<jh>
stmt (Add () () (q → (p ∨ q))) # *1.3
</jh>

The ''Perm'' axiom, for [[w:permutation|permutation]], asserts the [[w:commutativity|commutativity]] of disjunction.
<jh>
stmt (Perm () () ((p ∨ q) → (q ∨ p))) # *1.4
</jh>

The next axiom, ''Assoc'' for [[w:associativity|associativity]], asserts the associative law for disjunction. However, there is a twist. A commutation is built in the axiom as well. Thus, the axiom obtains more deductive power than plain associativity alone.
<jh>
stmt (Assoc () () ((p ∨ (q ∨ r)) → (q ∨ (p ∨ r)))) # *1.5
</jh>

The final axiom, ''Sum'' for summation, provides the basic building block for assembling complex formulas. It states that <math>(q\rightarrow r)\rightarrow((p\vee q)\rightarrow(p\vee r))</math>, meaning that an arbitrary formula may be added to both [[w:antecedent (logic)|antecedent]] and [[w:consequent|consequent]] of an implication.
<jh>
stmt (Sum () () ((q → r) → ((p ∨ q) → (p ∨ r)))) # *1.6
</jh>

From these axioms, all true statements of propositional logic can be derived.

== References ==

<references />

[[Category:Classical propositional logic|Principia Mathematica Propositional Logic]]