__NEWSECTIONLINK__
{{header
 | title    = Tearoom
 | subtitle =
 | left     = 
 | right    = 
 | shortcut = [[WP:TEA]]
 | notes    = The tearoom is Wikiproof's central discussion page. Feel free to [{{fullurl:Wikiproofs:Tearoom|action=edit&section=new}} start a new topic] or join an existing discussion.
}}[[Image:Meissen-teacup pinkrose01.jpg|thumb|right|Cup of tea about to be converted into a conjecture by skilled mathematicians]]

== Example discussion ==

Please sign your post with four tildes.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 22:15, 5 June 2009 (UTC)

[[Category:Wikiproofs|Tearoom]]

== better error message for failed export? ==

I thought I would see whether I could make any progress on finishing [[Principia Mathematica propositional logic]]. A little experimentation seemed to show that if an export fails because the page is missing a <code>thm</code> for one of the <code>stmt</code> in the interface, the error message fails to tell the user which <code>stmt</code> was unproved. Would it be easy to add this to the error message? [[User:Kingdon|Kingdon]] 23:48, 3 January 2010 (UTC)

:What was the error message you were getting? You may also want to try the command line version of JHilbert [http://www.mathi.uni-heidelberg.de/~alex/jhilbert/downloads.html] with different debug level settings.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 08:22, 6 January 2010 (UTC)

::The easiest way to reproduce this is to go to [[Nicod's reduction of Principia Mathematica]], remove the line "thm (.Add () () (q .→ (p .∨ q)) (" (and the next three lines which go with it), and click preview. The error is:
 export (PRINCIPIA Interface:Principia_Mathematica_propositional_logic () . Unable to export parameter 
 PRINCIPIA(Interface:Principia_Mathematica_propositional_logic)[]+.: Parameter mismatch: object not found
::I would have hoped for something like "export failed: statement Add is not proven". It might turn out that downloading JHilbert and the pages in question is indeed going to be the easiest way to work, but part of what excited me about wikiproofs was the possibility of skipping that step. [[User:Kingdon|Kingdon]] 02:40, 7 January 2010 (UTC)

:::Should be fixed now. The trouble with the current state of affairs is that JHilbert is the outgrowth of command line utilities and the logging/reporting facilities of JHilbert in command line mode vs. server mode are still quite conflated. I'm working on a rewrite but with all my RL stuff things are going very slowly atm.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 06:41, 7 January 2010 (UTC)

::::Thanks, looks much better.  Don't get too stressed about it; there probably would have been workarounds to this problem. [[User:Kingdon|Kingdon]] 15:18, 7 January 2010 (UTC)

== doubled names ==

If I look at [[Interface:Nicod axioms]], the rendered page contains:
 def (¬¬ p) (p | p))
In case it helps, the HTML for the doubled ¬ is:
 <nowiki><span class="beginexp">¬</span><span class="def">¬</span></nowiki>

Clicking on "edit" shows only a single character:
 def ((¬ p) (p | p))

I believe this started happening within the last day or so.

One other thing (which might not be related, or even a bug at all). Uncommenting both commented out lines at [[Sandbox]] shows an error
 def (.¬.¬ p Variable not found Variable not found: (cause unknown)

:Seems like the last update introduced some sort of bug (a <code>beginexp</code> is an opening parenthesis, nothing else). Maybe I can look into it over the weekend.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 10:45, 8 January 2010 (UTC)

::The name doubling bug is fixed now. The "variable not found" message is not a bug. You must define all variable names anew for each module: variable names are always local. This makes sense as variables usually have very simple (one or two letter) identifiers and you wouldn't want them to clash due to kind mismatches over several modules.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 14:37, 9 January 2010 (UTC)

:::Ah, thanks for noticing that.  The only connection between the two is that the doubling bug affected the text of the error message (the existence of the message was, as you point out, unrelated). [[User:Kingdon|Kingdon]] 02:08, 10 January 2010 (UTC)

== Similar-looking characters ==

When copying formulas from other web sites, one is sometimes nailed by similar-looking characters. The two which have come up so far are:

* metamath uses ⋀ (U+22C0 N-ARY LOGICAL AND) for its ordinary conjunction character, we use ∧ (U+2227 LOGICAL AND).  It is easy to make the case that metamath is just wrong on this one, and at least in my font the two are moderately different from each other.

* We use ⋅ (U+22C5 DOT OPERATOR) for multiplication (at least, that's the one at the bottom of the edit screen). On wikipedia, at least on [[w:Peano arithmetic]], they use · (U+00B7 MIDDLE DOT). These look extremely similar, and I don't really see how we can expect contributors to try to keep them straight.

Is there a mediawiki feature to map all U+00B7 to U+22C5? I'm thinking of the feature of [http://eo.wikipedia.org eo.wikipedia.org] which maps "cx" to "ĉ" (U+0109 LATIN SMALL LETTER C WITH CIRCUMFLEX) although I'm not sure that particular behavior is exactly what we want (I haven't gotten desperate enough to actually read any mediawiki documentation, so I have no idea how many choices there are).

It turns out to be pretty handy to copy-paste short formulas from one website to another, and modulo some parentheses and such it tends to work fairly well (even with ↔, ∀, ∃, etc), except for the problem characters above. [[User:Kingdon|Kingdon]] 02:37, 23 February 2010 (UTC)

:Metamath also uses U+00B7 MIDDLE DOT (for example in [http://us.metamath.org/mpeuni/sqr2irr.html sqr2irr]).  Perhaps the solution to that one is just to switch. Dunno. [[User:Kingdon|Kingdon]] 02:48, 23 February 2010 (UTC)

::I've switched the dot in [[MediaWiki:Edittools]] for now. On my system, the characters ⋀ and ∧ look markedly different on the rendered webpage, but only moderately different in the editor window (which uses a fixed-width font). Raph and I already discussed this problem some months ago. The correct solution is probably to define equivalence classes of similar-looking characters within JHilbert. That won't happen too soon, though, as there are other, more pressing problems. Meanwhile, it seems sensible to install an equivalence mapping in MediaWiki if it's not too dear. Do you have any idea how the Esperanto Wikipedia people implement their "cx" mapping? Some extension, or some Javascript?--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 09:33, 23 February 2010 (UTC)

:::The Esperanto wikipedia doesn't rely on javascript; it works without it (and, obviously, doesn't map any characters until the page is submitted).  I don't think it is what we want, though, as the character gets mapped back to "cx" for editing.  I'm not sure I like the JHilbert solution, as it would lead to pages containing a mixture of different symbols and the reader would be expected to figure out which ones are equivalent (particular in a case like the conjunction, where the wrong symbol really does look wrong, at least to my eyes). None of this is particularly high priority, though (especially since the dot seems managed for now), so I wouldn't lose any sleep over it. [[User:Kingdon|Kingdon]] 13:58, 23 February 2010 (UTC)

::::Now this is odd. The cx and friends replacement is hard-coded in <code>./languages/classes/LanguageEo.php</code> of the MediaWiki source. So this is not an easy way to maintain character mappings. The original JHilbert plan was to create equivalence classes only for characters that can be expected to be rendered equally by common fonts (such as the two dots), i.e. roughly the same class of cases where you would apply it to host/domain names for security reasons. For merely similar looking characters, one could implement canonical mappings. This would effectively eliminate non-canonical characters from JHilbert text (but not all Wiki text). Not sure if that's what we really want, so, as you suggest, let's wait and see for now.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 15:24, 23 February 2010 (UTC)