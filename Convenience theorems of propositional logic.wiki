{{header
 | title    = Convenience theorems of
 | subtitle = propositional logic
 | left     = 
 | right    = 
 | shortcut = 
 | notes    = This page proves those statments of [[Interface:Classical propositional calculus]] which aren't in [[Interface:Principia Mathematica propositional logic theorems]].  This includes chiefly additional builders (which aren't necessarily in most textbook treatments as they take substitution for granted), additional variants on modus ponens and related theorems, and the like. Some of them are significant aids to making proofs concise and readable, but some of them are more arguable and are here to ease translating proofs from other systems or so that people writing proofs can make their own decisions.
}}
{{interfaces
| imports = [[Interface:Principia Mathematica propositional logic theorems]]
| exports = [[Interface:Classical propositional calculus]]
}}

We first import [[Interface:Principia Mathematica propositional logic theorems]]:
<jh>
import (PRINCIPIA Interface:Principia_Mathematica_propositional_logic_theorems () ())
</jh>

== Detachment ==
We have already encountered our first detachment rule, <code>applyModusPonens</code>, which takes a proposition and an implication with that proposition as antecedent.  The following are variants in which the implication has several antecedents (that is, the antecedent is a conjunction of two or more propositions) and we detach one or more of the antecedents.

<jh>
thm (detach2of2 () ((H q) (HIMP ((p ∧ q) → r))) (p → r) (
        H

        q p ConjunctionCommutativity eliminateBiconditionalReverse
        HIMP
        applySyllogism

        export
        applyModusPonens
))
</jh>

== Transforming parts of formula ==
By "transforming", we mean applying a biconditional to replace part of a formula.
<jh>
thm (transformAntecedent ((HIMP (p → q)) (HEQ (p ↔ r))) (r → q) (
        HEQ eliminateBiconditionalForward
        HIMP
        applySyllogism
))
</jh>

== Done ==
We now export [[Interface:Classical propositional calculus]].
<jh>
export (CLASSICAL Interface:Classical_propositional_calculus () ())
</jh>

[[Category:Classical propositional logic]]

