We start with the [[Interface:Classical propositional calculus|theorems of propositional logic]] and [[Interface:Axioms of first-order logic]]:

<jh>
param (CLASSICAL Interface:Classical_propositional_calculus () ())
param (AXIOMS Interface:Axioms_of_first-order_logic (CLASSICAL) ())
</jh>

As usual, φ, ψ, χ, and θ are formulas and x, y, and z are objects:

<jh>
var (formula φ ψ χ θ)
var (object x y z)
</jh>

== Substitution ==

Also within the realm of first-order logic is being able to substitute one variable for another.  For example, [[w:mathematical induction|induction]] could be expressed with a notation along the lines of:
 (φ(0) ∧ (φ(k) → φ(k + 1))) → (∀ n φ(n))
or
 ([0 / x] φ ∧ (φ → [k + 1 / x] φ) → (∀ x φ)

In some formulations of predicate logic, substitution is performed syntactically and the rules governing it are expressed in English or a meta-theory.  In JHilbert, changing from one variable to another is done with equality (most of which remains behind the scenes thanks to the following theorems).

We first define the <code>subst</code> term:

<jh>
term (formula (subst object object formula))
</jh>

so for example <code>(subst y x φ)</code> can be thought of as a copy of <code>φ</code> in which <code>x</code> is changed to <code>y</code>. In more convention notation this would <code>[y / x] p</code>.