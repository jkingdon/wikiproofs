== Welcome ==

Hi Raph, and welcome on the Wiki. Thanks for your link. I'll read it properly soon.--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 10:40, 25 February 2010 (UTC)

:Thanks. I'm going over some of this stuff, and realizing that getting the definition mechanism right is very tricky. My proposal is fairly similar to [[User:CarlWitty/Definitions proposal|Carl's proposal]], but I hope even simpler (without the levels, and with, I hope, improved usability from not having to do (cv x), and not having to do a stack of hb*'s to satisfy the "not free in constraints", or have separate "v" variants for the cases when it's syntactic). It's also making me realize, of course, that a fully spec of the new Ghilbert is sorely needed, so I've started poking away at that. [[User:Raph|Raph]] 17:13, 25 February 2010 (UTC)

::Thank you for forwarding all those discussions to me. I'm hoping to create somewhat like a discussion hub on this wiki with pointers to the various discussions this weekend. Note that your communication with Robert M. Solovay arrived empty in my mailbox. Some kind of mistake, maybe?--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 10:37, 26 February 2010 (UTC)

== Thanks ==

Nice to see you here and I'm glad to see you're thinking about things like how definitions work (so I don't have to). 

Your presence already had one concrete good effect; I was looking through the stuff you linked to, browsed [http://levien.com/garden/ghnew/peano/peano_thms.gh], and found I had made a rather silly mistake (in not noticing that eqeq12, or EqualityBuilder as we call it on [[Interface:First-order logic]] can be proved from equality transitivity, rather than from set theory as set.mm does).
I'm also pleased to see that I apparently had correctly concluded that addeq12 and muleq12 have to be axioms. [[User:Kingdon|Kingdon]] 03:23, 26 February 2010 (UTC)

== Feeling like a newbie ==

I started trying to prove [http://us.metamath.org/mpegif/19.32.html 19.32] as a warmup (choosing the long name ForAllDisjunctionMovement), but found myself getting stuck fairly quickly. When I do the edit-entire-page / preview cycle, the error messages are too uninformative, and the cycle is clunky.

I _think_ that what I want to do is download a local copy, and use the latest jhilbert jar to verify. What I can't figure out easily is how to get the .jh and .jhi files I need. I could of course do it manually by choosing only the content inside &lt;jh&gt; tags, but this doesn't seem quite right. What am I missing? [[User:Raph|Raph]] 22:46, 26 February 2010 (UTC)

:Stripping out the content inside the jh tags is the approach I had in mind last time I wanted to do this (I even wrote a little ruby script to do it a few weeks ago when I was on a trip and off the net, only to find that I had downloaded jhilbert but not java :-)).  I don't know if there is another way. As for the error messages, there's a section at the bottom of [[Help:JHilbert]] about error messages, but I think you are right that one gets better error messages from a local JHilbert. [[User:Kingdon|Kingdon]] 23:48, 26 February 2010 (UTC)

:You're not missing anything. Extracting is just not properly implemented yet. There should be a SpecialPage for that. Even the server currently just uses
:<pre>private static final Pattern PATTERN = Pattern.compile("<jh>.*?</jh>", Pattern.DOTALL);</pre>
:which is probably not even safe (think HTML comments and <nowiki><nowiki></nowiki> tags).--[[User:GrafZahl|GrafZahl]]&nbsp;([[User talk:GrafZahl|talk]]) 21:55, 2 March 2010 (UTC)

== bug in ghilbert, or am I just confused? ==

If I go to the subversion version 9 of peano_thms.gh, I see the following (extracting just the relevant bits):

  thm (sbc5 ((A x)) ()
    (<-> ([/] A x ph) (E. x (/\ (= x A) ph)))
  . . .
  thm (sbcco ((ph y) (A y)) ()
    (<-> ([/] A y ([/] y x ph)) ([/] A x ph))
    A y ([/] y x ph) sbc5
      y x ph sbc5

Shoudn't the second invocation of sbc5 blow up because there isn't a distinct variable constraint on (x y)? If not, why not? Is this a bug in the var/tvar code? I don't see a reason why being a var rather than a tvar could soundly bypass distinct variable constraints, but I could have missed something. [[User:Kingdon|Kingdon]] 20:08, 12 June 2010 (UTC)